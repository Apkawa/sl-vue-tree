{"version":3,"sources":["webpack://SlVueTree/webpack/universalModuleDefinition","webpack://SlVueTree/webpack/bootstrap","webpack://SlVueTree/./src/sl-vue-tree.js","webpack://SlVueTree/./src/sl-vue-tree.vue?2ddf","webpack://SlVueTree/./src/sl-vue-tree.vue","webpack://SlVueTree/./node_modules/vue-loader/lib/runtime/component-normalizer.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","sl_vue_tree","props","type","Array","default","edgeSize","Number","showBranches","Boolean","level","parentInd","allowMultiselect","multiselectKey","String","validator","allowedKeys","multiselectKeys","isArray","filter","keyName","indexOf","length","scrollAreaHeight","maxScrollSpeed","allowDrop","Function","allowDrag","[object Object]","rootCursorPosition","scrollIntervalId","scrollSpeed","lastSelectedNode","mouseIsDown","isDragging","lastMousePos","x","y","preventDrag","currentValue","this","dropAllow","dropMove","dropCopy","isRoot","document","addEventListener","onDocumentMouseupHandler","removeEventListener","watch","newValue","computed","getParent","cursorPosition","nodeModels","copy","getNodes","nodes","children","gaps","push","getSelected","getDraggable","methods","pos","setCursorPosition","parentPath","isVisible","map","nodeModel","ind","nodePath","concat","getNode","path","siblings","slice","getNodeSiblings","isExpanded","isDraggable","isSelectable","isAllowDrag","isAllowDrop","title","isLeaf","isSelected","data","pathStr","JSON","stringify","isFirstChild","isLastChild","getRoot","$emit","selectedNodes","event","draggingNodes","position","toggledNode","node","preventDefault","getCursorPositionFromCoords","clientX","clientY","addToSelection","multiselectKeyIsPressed","find","selectedNode","newNodes","shiftSelectionMode","shiftKey","shiftSelectionStarted","traverse","emitInput","emitSelect","draggableNodes","placement","parentNodes","getParentNodes","onMousemoveHandler","initialDraggingState","isDragStarted","$root","$el","rootRect","getBoundingClientRect","$dragInfo","$refs","dragInfo","dragInfoTop","top","scrollTop","style","marginBottom","dragInfoLeft","left","destNode","select","_checkAllowDrag","_checkAllowDrop","ctrlKey","scrollBottomLine","bottom","scrollDownSpeed","scrollTopLine","scrollTopSpeed","startScroll","stopScroll","$target","elementFromPoint","$nodeItem","getAttribute","closest","parse","nodeHeight","offsetHeight","offsetY","height","getLastNode","getFirstNode","querySelector","lastNode","resultNode","comparePaths","prevNodes","_path","unshift","path1","path2","button","onNodeMousedownHandler","speed","setInterval","clearInterval","onNodeMouseupHandler","targetNode","stopDrag","draggingNode","checkNodeIsParent","nodeModelsToInsert","draggingNodeModel","destSiblings","destNodeModel","insertInd","splice","traverseModels","_markToDelete","_copySource","emitDrop","updateNode","emitToggle","stopPropagation","$parent","patch","assign","cb","shouldStop","nodeInd","itemPath","paths","pathsStr","sourceNode","destPath","entity","render","_vm","_h","$createElement","_c","_self","staticClass","class","sl-vue-tree-root","sl-vue-tree-drop-forbidden","sl-vue-tree-drop-move","sl-vue-tree-drop-copy","on","mousemove","mouseleave","onMouseleaveHandler","dragend","$event","onDragendHandler","ref","_l","sl-vue-tree-selected","visibility","dragover","_v","sl-vue-tree-cursor-hover","sl-vue-tree-cursor-inside","sl-vue-tree-node-is-leaf","sl-vue-tree-node-is-folder","attrs","mousedown","mouseup","contextmenu","emitNodeContextmenu","dblclick","emitNodeDblclick","click","emitNodeClick","onExternalDragoverHandler","drop","onExternalDropHandler","gapInd","_t","_e","_s","fromCharCode","onToggleHandler","scopedSlots","_u","fn","directives","rawName","expression","selectionSize","_withStripped","Component","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","normalizeComponent","__file","__webpack_exports__"],"mappings":"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","file":"sl-vue-tree.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SlVueTree\"] = factory();\n\telse\n\t\troot[\"SlVueTree\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export default {\n  name: 'sl-vue-tree',\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    },\n    edgeSize: {\n      type: Number,\n      default: 3\n    },\n    showBranches: {\n      type: Boolean,\n      default: false\n    },\n    level: {\n      type: Number,\n      default: 0\n    },\n    parentInd: {\n      type: Number\n    },\n    allowMultiselect: {\n      type: Boolean,\n      default: true\n    },\n    multiselectKey: {\n      type: [String, Array],\n      default: function () {\n        return ['ctrlKey', 'metaKey']\n      },\n      validator: function (value) {\n        let allowedKeys = ['ctrlKey', 'metaKey', 'altKey']\n        let multiselectKeys = Array.isArray(value) ? value : [value]\n        multiselectKeys = multiselectKeys.filter(keyName => allowedKeys.indexOf(keyName) !== -1)\n        return !!multiselectKeys.length\n      }\n    },\n    scrollAreaHeight: {\n      type: Number,\n      default: 70\n    },\n    maxScrollSpeed: {\n      type: Number,\n      default: 20\n    },\n    allowDrop: {\n      type: Function,\n    },\n    allowDrag: {\n      type: Function,\n    }\n\n  },\n\n  data () {\n    return {\n      rootCursorPosition: null,\n      scrollIntervalId: 0,\n      scrollSpeed: 0,\n      lastSelectedNode: null,\n      mouseIsDown: false,\n      isDragging: false,\n      lastMousePos: {x: 0, y: 0},\n      preventDrag: false,\n      currentValue: this.value,\n      dropAllow: true,\n      dropMove: true,\n      dropCopy: false,\n    }\n  },\n\n  mounted () {\n    if (this.isRoot) {\n      document.addEventListener('mouseup', this.onDocumentMouseupHandler)\n    }\n  },\n\n  beforeDestroy () {\n    document.removeEventListener('mouseup', this.onDocumentMouseupHandler)\n  },\n\n  watch: {\n    value: function (newValue) {\n      this.currentValue = newValue\n    }\n  },\n\n  computed: {\n    cursorPosition () {\n      if (this.isRoot) return this.rootCursorPosition\n      return this.getParent().cursorPosition\n    },\n\n    nodes () {\n      if (this.isRoot) {\n        const nodeModels = this.copy(this.currentValue)\n        return this.getNodes(nodeModels)\n      }\n\n      return this.getParent().nodes[this.parentInd].children\n    },\n    /**\n     * gaps is using for nodes indentation\n     * @returns {number[]}\n     */\n    gaps () {\n      const gaps = []\n      let i = this.level - 1\n      if (!this.showBranches) i++\n      while (i-- > 0) gaps.push(i)\n      return gaps\n    },\n\n    isRoot () {\n      return !this.level\n    },\n\n    selectionSize () {\n      return this.getSelected().length\n    },\n\n    dragSize () {\n      return this.getDraggable().length\n    }\n  },\n  methods: {\n\n    setCursorPosition (pos) {\n      if (this.isRoot) {\n        this.rootCursorPosition = pos\n        return\n      }\n      this.getParent().setCursorPosition(pos)\n    },\n\n    getNodes (nodeModels, parentPath = [], isVisible = true) {\n      return nodeModels.map((nodeModel, ind) => {\n        const nodePath = parentPath.concat(ind)\n        return this.getNode(nodePath, nodeModel, nodeModels, isVisible)\n      })\n    },\n\n    getNode (\n      path,\n      nodeModel = null,\n      siblings = null,\n      isVisible = null\n    ) {\n      const ind = path.slice(-1)[0]\n\n      // calculate nodeModel, siblings, isVisible fields if it is not passed as arguments\n      siblings = siblings || this.getNodeSiblings(this.currentValue, path)\n      nodeModel = nodeModel || (siblings && siblings[ind]) || null\n\n      if (isVisible == null) {\n        isVisible = this.isVisible(path)\n      }\n\n      if (!nodeModel) return null\n\n      const isExpanded = nodeModel.isExpanded == void 0 ? true : !!nodeModel.isExpanded\n      const isDraggable = nodeModel.isDraggable == void 0 ? true : !!nodeModel.isDraggable\n      const isSelectable = nodeModel.isSelectable == void 0 ? true : !!nodeModel.isSelectable\n      const isAllowDrag = nodeModel.isAllowDrag == void 0 ? true : !!nodeModel.isAllowDrag\n      const isAllowDrop = nodeModel.isAllowDrop == void 0 ? true : !!nodeModel.isAllowDrop\n\n      const node = {\n\n        // define the all ISlTreeNodeModel props\n        title: nodeModel.title,\n        isLeaf: !!nodeModel.isLeaf,\n        children: nodeModel.children ? this.getNodes(nodeModel.children, path, isExpanded) : [],\n        isSelected: !!nodeModel.isSelected,\n        isExpanded,\n        isVisible,\n        isDraggable,\n        isSelectable,\n        isAllowDrag,\n        isAllowDrop,\n        data: nodeModel.data !== void 0 ? nodeModel.data : {},\n\n        // define the all ISlTreeNode computed props\n        path: path,\n        pathStr: JSON.stringify(path),\n        level: path.length,\n        ind,\n        isFirstChild: ind === 0,\n        isLastChild: ind === siblings.length - 1\n      }\n      return node\n    },\n\n    isVisible (path) {\n      if (path.length < 2) return true\n      let nodeModels = this.currentValue\n\n      for (let i = 0; i < path.length - 1; i++) {\n        let ind = path[i]\n        let nodeModel = nodeModels[ind]\n        let isExpanded = nodeModel.isExpanded === void 0 ? true : !!nodeModel.isExpanded\n        if (!isExpanded) return false\n        nodeModels = nodeModel.children\n      }\n\n      return true\n    },\n\n    emitInput (newValue) {\n      this.currentValue = newValue\n      this.getRoot().$emit('input', newValue)\n    },\n\n    emitSelect (selectedNodes, event) {\n      this.getRoot().$emit('select', selectedNodes, event)\n    },\n\n    emitDrop (draggingNodes, position, event) {\n      this.getRoot().$emit('drop', draggingNodes, position, event)\n    },\n\n    emitToggle (toggledNode, event) {\n      this.getRoot().$emit('toggle', toggledNode, event)\n    },\n\n    emitNodeClick (node, event) {\n      this.getRoot().$emit('nodeclick', node, event)\n    },\n\n    emitNodeDblclick (node, event) {\n      this.getRoot().$emit('nodedblclick', node, event)\n    },\n\n    emitNodeContextmenu (node, event) {\n      this.getRoot().$emit('nodecontextmenu', node, event)\n    },\n\n    onExternalDragoverHandler (node, event) {\n      event.preventDefault()\n      const root = this.getRoot()\n      const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY)\n      root.setCursorPosition(cursorPosition)\n      root.$emit('externaldragover', cursorPosition, event)\n    },\n\n    onExternalDropHandler (node, event) {\n      const root = this.getRoot()\n      const cursorPosition = root.getCursorPositionFromCoords(event.clientX, event.clientY)\n      root.$emit('externaldrop', cursorPosition, event)\n      this.setCursorPosition(null)\n    },\n\n    select (path, addToSelection = false, event = null) {\n      const multiselectKeys = Array.isArray(this.multiselectKey) ?\n        this.multiselectKey :\n        [this.multiselectKey]\n      const multiselectKeyIsPressed = event && !!multiselectKeys.find(key => event[key])\n      addToSelection = (multiselectKeyIsPressed || addToSelection) && this.allowMultiselect\n\n      const selectedNode = this.getNode(path)\n      if (!selectedNode) return null\n      const newNodes = this.copy(this.currentValue)\n      const shiftSelectionMode = this.allowMultiselect && event && event.shiftKey && this.lastSelectedNode\n      const selectedNodes = []\n      let shiftSelectionStarted = false\n\n      this.traverse((node, nodeModel) => {\n\n        if (shiftSelectionMode) {\n          if (node.pathStr === selectedNode.pathStr || node.pathStr === this.lastSelectedNode.pathStr) {\n            nodeModel.isSelected = node.isSelectable\n            shiftSelectionStarted = !shiftSelectionStarted\n          }\n          if (shiftSelectionStarted) nodeModel.isSelected = node.isSelectable\n        } else if (node.pathStr === selectedNode.pathStr) {\n          nodeModel.isSelected = node.isSelectable\n        } else if (!addToSelection) {\n          if (nodeModel.isSelected) nodeModel.isSelected = false\n        }\n\n        if (nodeModel.isSelected) selectedNodes.push(node)\n\n      }, newNodes)\n\n      this.lastSelectedNode = selectedNode\n      this.emitInput(newNodes)\n      this.emitSelect(selectedNodes, event)\n      return selectedNode\n    },\n\n    _checkAllowDrag (draggableNodes, event) {\n      if (!draggableNodes.length) {\n        return false\n      }\n      if (typeof this.allowDrag === 'function') {\n        if (!this.allowDrag(draggableNodes, event)) {\n          return false\n        }\n      }\n      for (let node of draggableNodes) {\n        if (!node.isAllowDrag) {\n          return false\n        }\n      }\n      return true\n    },\n    _checkAllowDrop (draggableNodes, position, event) {\n      const {node, placement} = position\n      if (placement === 'inside' && !node.isAllowDrop) {\n        return false\n      }\n      const parentNodes = this.getParentNodes(node.path)\n      for (let n of parentNodes) {\n        if (!n.isAllowDrop) {\n          return false\n        }\n      }\n      if (typeof this.allowDrop === 'function') {\n        if (!this.allowDrop(draggableNodes, position, event)) {\n          return false\n        }\n      }\n      return true\n    },\n    onMousemoveHandler (event) {\n      if (!this.isRoot) {\n        this.getRoot().onMousemoveHandler(event)\n        return\n      }\n\n      if (this.preventDrag) return\n\n      const initialDraggingState = this.isDragging\n      const isDragging =\n        this.isDragging || (\n          this.mouseIsDown &&\n          (this.lastMousePos.x !== event.clientX || this.lastMousePos.y !== event.clientY)\n        )\n\n      const isDragStarted = initialDraggingState === false && isDragging === true\n\n      this.lastMousePos = {\n        x: event.clientX,\n        y: event.clientY\n      }\n\n      if (!isDragging) return\n\n      const $root = this.getRoot().$el\n      const rootRect = $root.getBoundingClientRect()\n      const $dragInfo = this.$refs.dragInfo\n      const dragInfoTop = (event.clientY - rootRect.top + $root.scrollTop - ($dragInfo.style.marginBottom | 0))\n      const dragInfoLeft = (event.clientX - rootRect.left)\n\n      $dragInfo.style.top = dragInfoTop + 'px'\n      $dragInfo.style.left = dragInfoLeft + 'px'\n\n      const cursorPosition = this.getCursorPositionFromCoords(event.clientX, event.clientY)\n      const destNode = cursorPosition.node\n      const placement = cursorPosition.placement\n\n      if (isDragStarted && !destNode.isSelected) {\n        this.select(destNode.path, false, event)\n      }\n\n      const draggableNodes = this.getDraggable()\n      if (!this._checkAllowDrag(draggableNodes, event)) {\n        this.preventDrag = true\n        return\n      }\n\n      this.isDragging = isDragging\n\n      this.setCursorPosition({node: destNode, placement})\n\n      this.dropAllow = this._checkAllowDrop(draggableNodes, {node: destNode, placement}, event)\n      this.dropMove = this.dropAllow && !event.ctrlKey || event.shiftKey\n      this.dropCopy = this.dropAllow && event.ctrlKey && !event.shiftKey\n\n      const scrollBottomLine = rootRect.bottom - this.scrollAreaHeight\n      const scrollDownSpeed = (event.clientY - scrollBottomLine) / (rootRect.bottom - scrollBottomLine)\n      const scrollTopLine = rootRect.top + this.scrollAreaHeight\n      const scrollTopSpeed = (scrollTopLine - event.clientY) / (scrollTopLine - rootRect.top)\n\n      if (scrollDownSpeed > 0) {\n        this.startScroll(scrollDownSpeed)\n      } else if (scrollTopSpeed > 0) {\n        this.startScroll(-scrollTopSpeed)\n      } else {\n        this.stopScroll()\n      }\n    },\n\n    getCursorPositionFromCoords (x, y) {\n      const $target = document.elementFromPoint(x, y)\n      const $nodeItem = $target.getAttribute('path') ? $target : $target.closest('[path]')\n      let destNode\n      let placement\n\n      if ($nodeItem) {\n\n        if (!$nodeItem) return\n\n        destNode = this.getNode(JSON.parse($nodeItem.getAttribute('path')))\n\n        const nodeHeight = $nodeItem.offsetHeight\n        const edgeSize = this.edgeSize\n        const offsetY = y - $nodeItem.getBoundingClientRect().top\n\n        if (destNode.isLeaf) {\n          placement = offsetY >= nodeHeight / 2 ? 'after' : 'before'\n        } else {\n          if (offsetY <= edgeSize) {\n            placement = 'before'\n          } else if (offsetY >= nodeHeight - edgeSize) {\n            placement = 'after'\n          } else {\n            placement = 'inside'\n          }\n        }\n      } else {\n        const $root = this.getRoot().$el\n        const rootRect = $root.getBoundingClientRect()\n        if (y > rootRect.top + (rootRect.height / 2)) {\n          placement = 'after'\n          destNode = this.getLastNode()\n        } else {\n          placement = 'before'\n          destNode = this.getFirstNode()\n        }\n      }\n\n      return {node: destNode, placement}\n    },\n\n    onMouseleaveHandler (event) {\n      if (!this.isRoot || !this.isDragging) return\n      const $root = this.getRoot().$el\n      const rootRect = $root.getBoundingClientRect()\n      if (event.clientY >= rootRect.bottom) {\n        this.setCursorPosition({node: this.nodes.slice(-1)[0], placement: 'after'})\n      } else if (event.clientY < rootRect.top) {\n        this.setCursorPosition({node: this.getFirstNode(), placement: 'before'})\n      }\n    },\n\n    getNodeEl (path) {\n      return this.getRoot().$el.querySelector(`[path=\"${JSON.stringify(path)}\"]`)\n    },\n\n    getLastNode () {\n      let lastNode = null\n      this.traverse((node) => {\n        lastNode = node\n      })\n      return lastNode\n    },\n\n    getFirstNode () {\n      return this.getNode([0])\n    },\n\n    getNextNode (path, filter = null) {\n\n      let resultNode = null\n\n      this.traverse((node) => {\n        if (this.comparePaths(node.path, path) < 1) return\n\n        if (!filter || filter(node)) {\n          resultNode = node\n          return false // stop traverse\n        }\n\n      })\n\n      return resultNode\n    },\n\n    getPrevNode (path, filter) {\n      let prevNodes = []\n\n      this.traverse((node) => {\n        if (this.comparePaths(node.path, path) >= 0) {\n          return false\n        }\n        prevNodes.push(node)\n      })\n\n      let i = prevNodes.length\n      while (i--) {\n        const node = prevNodes[i]\n        if (!filter || filter(node)) return node\n      }\n\n      return null\n    },\n\n    getParentNode (path) {\n      return this.getNode(path.slice(0, path.length - 1))\n    },\n\n    getParentNodes (path) {\n      const nodes = []\n      let _path = [...path]\n      for (let i = 0; i < path.length - 1; i++) {\n        _path = _path.slice(0, _path.length - 1)\n        nodes.unshift(this.getNode(_path))\n      }\n      return nodes\n    },\n\n    /**\n     * returns 1 if path1 > path2\n     * returns -1 if path1 < path2\n     * returns 0 if path1 == path2\n     *\n     * examples\n     *\n     * [1, 2, 3] < [1, 2, 4]\n     * [1, 1, 3] < [1, 2, 3]\n     * [1, 2, 3] > [1, 2, 0]\n     * [1, 2, 3] > [1, 1, 3]\n     * [1, 2] < [1, 2, 0]\n     *\n     */\n    comparePaths (path1, path2) {\n      for (let i = 0; i < path1.length; i++) {\n        if (path2[i] === void 0) return 1\n        if (path1[i] > path2[i]) return 1\n        if (path1[i] < path2[i]) return -1\n      }\n      return path2[path1.length] === void 0 ? 0 : -1\n    },\n\n    onNodeMousedownHandler (event, node) {\n      // handle only left mouse button\n      if (event.button !== 0) return\n\n      if (!this.isRoot) {\n        this.getRoot().onNodeMousedownHandler(event, node)\n        return\n      }\n      this.mouseIsDown = true\n    },\n\n    startScroll (speed) {\n      const $root = this.getRoot().$el\n      if (this.scrollSpeed === speed) {\n        return\n      } else if (this.scrollIntervalId) {\n        this.stopScroll()\n      }\n\n      this.scrollSpeed = speed\n      this.scrollIntervalId = setInterval(() => {\n        $root.scrollTop += this.maxScrollSpeed * speed\n      }, 20)\n    },\n\n    stopScroll () {\n      clearInterval(this.scrollIntervalId)\n      this.scrollIntervalId = 0\n      this.scrollSpeed = 0\n    },\n\n    onDocumentMouseupHandler (event) {\n      if (this.isDragging) this.onNodeMouseupHandler(event)\n    },\n\n    onNodeMouseupHandler (event, targetNode = null) {\n\n      // handle only left mouse button\n      if (event.button !== 0) return\n\n      if (!this.isRoot) {\n        this.getRoot().onNodeMouseupHandler(event, targetNode)\n        return\n      }\n\n      this.mouseIsDown = false\n\n      if (!this.isDragging && targetNode && !this.preventDrag) {\n        this.select(targetNode.path, false, event)\n      }\n\n      this.preventDrag = false\n\n      if (!this.cursorPosition || !this.dropAllow) {\n        this.stopDrag()\n        return\n      }\n\n      const draggingNodes = this.getDraggable()\n\n      // check that nodes is possible to insert\n      for (let draggingNode of draggingNodes) {\n        if (!draggingNode.isAllowDrag) {\n          this.stopDrag()\n          return\n        }\n        if (draggingNode.pathStr === this.cursorPosition.node.pathStr) {\n          this.stopDrag()\n          return\n        }\n\n        if (this.checkNodeIsParent(draggingNode, this.cursorPosition.node)) {\n          this.stopDrag()\n          return\n        }\n\n      }\n\n      const newNodes = this.copy(this.currentValue)\n      const nodeModelsToInsert = []\n\n      // find and mark dragging model to delete\n      for (let draggingNode of draggingNodes) {\n        const sourceSiblings = this.getNodeSiblings(newNodes, draggingNode.path)\n        const draggingNodeModel = sourceSiblings[draggingNode.ind]\n        nodeModelsToInsert.push(this.copy(draggingNodeModel))\n        draggingNodeModel['_copySource'] = this.dropCopy\n        draggingNodeModel['_markToDelete'] = this.dropMove\n      }\n\n      // insert dragging nodes to the new place\n      const destNode = this.cursorPosition.node\n      const destSiblings = this.getNodeSiblings(newNodes, destNode.path)\n      const destNodeModel = destSiblings[destNode.ind]\n\n      if (this.cursorPosition.placement === 'inside') {\n        destNodeModel.children = destNodeModel.children || []\n        destNodeModel.children.unshift(...nodeModelsToInsert)\n      } else {\n        const insertInd = this.cursorPosition.placement === 'before' ?\n          destNode.ind :\n          destNode.ind + 1\n\n        destSiblings.splice(insertInd, 0, ...nodeModelsToInsert)\n      }\n\n      // delete dragging node from the old place\n      this.traverseModels((nodeModel, siblings, ind) => {\n        if (!nodeModel._markToDelete) {\n          if (nodeModel._copySource) {\n            nodeModel.isSelected = false\n          }\n          return\n        }\n        siblings.splice(ind, 1)\n      }, newNodes)\n\n      this.lastSelectedNode = null\n      this.emitInput(newNodes)\n      this.emitDrop(draggingNodes, this.cursorPosition, event)\n      this.stopDrag()\n    },\n\n    onToggleHandler (event, node) {\n      this.updateNode(node.path, {isExpanded: !node.isExpanded})\n      this.emitToggle(node, event)\n      event.stopPropagation()\n    },\n\n    stopDrag () {\n      this.isDragging = false\n      this.dropAllow = true\n      this.mouseIsDown = false\n      this.setCursorPosition(null)\n      this.stopScroll()\n    },\n\n    getParent () {\n      return this.$parent\n    },\n\n    getRoot () {\n      if (this.isRoot) return this\n      return this.getParent().getRoot()\n    },\n\n    getNodeSiblings (nodes, path) {\n      if (path.length === 1) return nodes\n      return this.getNodeSiblings(nodes[path[0]].children, path.slice(1))\n    },\n\n    updateNode (path, patch) {\n      if (!this.isRoot) {\n        this.getParent().updateNode(path, patch)\n        return\n      }\n\n      const pathStr = JSON.stringify(path)\n      const newNodes = this.copy(this.currentValue)\n      this.traverse((node, nodeModel) => {\n        if (node.pathStr !== pathStr) return\n        Object.assign(nodeModel, patch)\n      }, newNodes)\n\n      this.emitInput(newNodes)\n    },\n\n    getSelected () {\n      const selectedNodes = []\n      this.traverse((node) => {\n        if (node.isSelected) selectedNodes.push(node)\n      })\n      return selectedNodes\n    },\n\n    getDraggable () {\n      const selectedNodes = []\n      this.traverse((node) => {\n        if (node.isSelected && node.isDraggable) selectedNodes.push(node)\n      })\n      return selectedNodes\n    },\n\n    traverse (\n      cb,\n      nodeModels = null,\n      parentPath = []\n    ) {\n      if (!nodeModels) nodeModels = this.currentValue\n\n      let shouldStop = false\n\n      const nodes = []\n\n      for (let nodeInd = 0; nodeInd < nodeModels.length; nodeInd++) {\n        const nodeModel = nodeModels[nodeInd]\n        const itemPath = parentPath.concat(nodeInd)\n        const node = this.getNode(itemPath, nodeModel, nodeModels)\n        shouldStop = cb(node, nodeModel, nodeModels) === false\n        nodes.push(node)\n\n        if (shouldStop) break\n\n        if (nodeModel.children) {\n          shouldStop = this.traverse(cb, nodeModel.children, itemPath) === false\n          if (shouldStop) break\n        }\n      }\n\n      return !shouldStop ? nodes : false\n    },\n\n    traverseModels (cb, nodeModels) {\n      let i = nodeModels.length\n      while (i--) {\n        const nodeModel = nodeModels[i]\n        if (nodeModel.children) this.traverseModels(cb, nodeModel.children)\n        cb(nodeModel, nodeModels, i)\n      }\n      return nodeModels\n    },\n\n    remove (paths) {\n      const pathsStr = paths.map(path => JSON.stringify(path))\n      const newNodes = this.copy(this.currentValue)\n      this.traverse((node, nodeModel, siblings) => {\n        for (const pathStr of pathsStr) {\n          if (node.pathStr === pathStr) nodeModel._markToDelete = true\n        }\n      }, newNodes)\n\n      this.traverseModels((nodeModel, siblings, ind) => {\n        if (!nodeModel._markToDelete) return\n        siblings.splice(ind, 1)\n      }, newNodes)\n\n      this.emitInput(newNodes)\n    },\n\n    checkNodeIsParent (sourceNode, destNode) {\n      const destPath = destNode.path\n      return JSON.stringify(destPath.slice(0, sourceNode.path.length)) === sourceNode.pathStr\n    },\n\n    copy (entity) {\n      return JSON.parse(JSON.stringify(entity))\n    }\n\n  }\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"sl-vue-tree\",\n      class: {\n        \"sl-vue-tree-root\": _vm.isRoot,\n        \"sl-vue-tree-drop-forbidden\": _vm.isDragging && !_vm.dropAllow,\n        \"sl-vue-tree-drop-move\": _vm.isDragging && _vm.dropMove,\n        \"sl-vue-tree-drop-copy\": _vm.isDragging && _vm.dropCopy\n      },\n      on: {\n        mousemove: _vm.onMousemoveHandler,\n        mouseleave: _vm.onMouseleaveHandler,\n        dragend: function($event) {\n          _vm.onDragendHandler(null, $event)\n        }\n      }\n    },\n    [\n      _c(\n        \"div\",\n        { ref: \"nodes\", staticClass: \"sl-vue-tree-nodes-list\" },\n        [\n          _vm._l(_vm.nodes, function(node, nodeInd) {\n            return _c(\n              \"div\",\n              {\n                staticClass: \"sl-vue-tree-node\",\n                class: { \"sl-vue-tree-selected\": node.isSelected }\n              },\n              [\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_before\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"before\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"sl-vue-tree-node-item\",\n                    class: {\n                      \"sl-vue-tree-cursor-hover\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n\n                      \"sl-vue-tree-cursor-inside\":\n                        _vm.cursorPosition &&\n                        _vm.cursorPosition.placement === \"inside\" &&\n                        _vm.cursorPosition.node.pathStr === node.pathStr,\n                      \"sl-vue-tree-node-is-leaf\": node.isLeaf,\n                      \"sl-vue-tree-node-is-folder\": !node.isLeaf\n                    },\n                    attrs: { path: node.pathStr },\n                    on: {\n                      mousedown: function($event) {\n                        _vm.onNodeMousedownHandler($event, node)\n                      },\n                      mouseup: function($event) {\n                        _vm.onNodeMouseupHandler($event, node)\n                      },\n                      contextmenu: function($event) {\n                        _vm.emitNodeContextmenu(node, $event)\n                      },\n                      dblclick: function($event) {\n                        _vm.emitNodeDblclick(node, $event)\n                      },\n                      click: function($event) {\n                        _vm.emitNodeClick(node, $event)\n                      },\n                      dragover: function($event) {\n                        _vm.onExternalDragoverHandler(node, $event)\n                      },\n                      drop: function($event) {\n                        _vm.onExternalDropHandler(node, $event)\n                      }\n                    }\n                  },\n                  [\n                    _vm._l(_vm.gaps, function(gapInd) {\n                      return _c(\"div\", { staticClass: \"sl-vue-tree-gap\" })\n                    }),\n                    _vm._v(\" \"),\n                    _vm.level && _vm.showBranches\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"sl-vue-tree-branch\" },\n                          [\n                            _vm._t(\n                              \"branch\",\n                              [\n                                !node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x251c)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                node.isLastChild\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n            \" +\n                                          _vm._s(String.fromCharCode(0x2514)) +\n                                          _vm._s(String.fromCharCode(0x2500)) +\n                                          \" \\n          \"\n                                      )\n                                    ])\n                                  : _vm._e()\n                              ],\n                              { node: node }\n                            )\n                          ],\n                          2\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-title\" },\n                      [\n                        !node.isLeaf\n                          ? _c(\n                              \"span\",\n                              {\n                                staticClass: \"sl-vue-tree-toggle\",\n                                on: {\n                                  click: function($event) {\n                                    _vm.onToggleHandler($event, node)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._t(\n                                  \"toggle\",\n                                  [\n                                    _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n             \" +\n                                          _vm._s(\n                                            !node.isLeaf\n                                              ? node.isExpanded\n                                                ? \"-\"\n                                                : \"+\"\n                                              : \"\"\n                                          ) +\n                                          \"\\n            \"\n                                      )\n                                    ])\n                                  ],\n                                  { node: node }\n                                )\n                              ],\n                              2\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                          node: node\n                        })\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"sl-vue-tree-sidebar\" },\n                      [_vm._t(\"sidebar\", null, { node: node })],\n                      2\n                    )\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                node.children && node.children.length && node.isExpanded\n                  ? _c(\"sl-vue-tree\", {\n                      attrs: {\n                        value: node.children,\n                        level: node.level,\n                        parentInd: nodeInd,\n                        allowMultiselect: _vm.allowMultiselect,\n                        edgeSize: _vm.edgeSize,\n                        showBranches: _vm.showBranches\n                      },\n                      on: {\n                        dragover: function($event) {\n                          $event.preventDefault()\n                        }\n                      },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"title\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\"title\", [_vm._v(_vm._s(node.title))], {\n                                node: node\n                              })\n                            ]\n                          }\n                        },\n                        {\n                          key: \"toggle\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [\n                              _vm._t(\n                                \"toggle\",\n                                [\n                                  _c(\"span\", [\n                                    _vm._v(\n                                      \"\\n             \" +\n                                        _vm._s(\n                                          !node.isLeaf\n                                            ? node.isExpanded\n                                              ? \"-\"\n                                              : \"+\"\n                                            : \"\"\n                                        ) +\n                                        \"\\n          \"\n                                    )\n                                  ])\n                                ],\n                                { node: node }\n                              )\n                            ]\n                          }\n                        },\n                        {\n                          key: \"sidebar\",\n                          fn: function(ref) {\n                            var node = ref.node\n                            return [_vm._t(\"sidebar\", null, { node: node })]\n                          }\n                        }\n                      ])\n                    })\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", {\n                  staticClass: \"sl-vue-tree-cursor sl-vue-tree-cursor_after\",\n                  style: {\n                    visibility:\n                      _vm.cursorPosition &&\n                      _vm.cursorPosition.node.pathStr === node.pathStr &&\n                      _vm.cursorPosition.placement === \"after\"\n                        ? \"visible\"\n                        : \"hidden\"\n                  },\n                  on: {\n                    dragover: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                })\n              ],\n              1\n            )\n          }),\n          _vm._v(\" \"),\n          _vm.isRoot\n            ? _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.isDragging,\n                      expression: \"isDragging\"\n                    }\n                  ],\n                  ref: \"dragInfo\",\n                  staticClass: \"sl-vue-tree-drag-info\"\n                },\n                [\n                  _vm._t(\"draginfo\", [\n                    _vm._v(\n                      \"\\n        Items: \" +\n                        _vm._s(_vm.selectionSize) +\n                        \"\\n      \"\n                    )\n                  ])\n                ],\n                2\n              )\n            : _vm._e()\n        ],\n        2\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nexport { render, staticRenderFns }\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-539decb0\", { render: render, staticRenderFns: staticRenderFns })\n  }\n}","var disposed = false\n/* script */\nexport * from \"!!!./sl-vue-tree.js\"\nimport __vue_script__ from \"!!!./sl-vue-tree.js\"/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-539decb0\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./sl-vue-tree.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/sl-vue-tree.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-539decb0\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-539decb0\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"sourceRoot":""}